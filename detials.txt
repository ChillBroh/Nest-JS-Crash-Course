module - group necessary controllers and services together. 
controllers - handle request and response. also we write logics here
providers/services -  execute business logic


commands :
npm run start - normal server start
npm run start: dev - server start in watch module
nest g module < module name> - create a module in the directory and also connect with main app module automatically

Database:
    Docker: 
        compose.yml file: 
        version: '3.8' 

            services: 
                dev-db: 
                    image: postgres:13 //docker image name
                        ports:
                         - '5432:5432' //port mapping for container
            environment:
                POSTGRES_USER: postgres //username
                POSTGRES_PASSWORD: 123 //password
                POSTGRES_DB: nest //db name
                networks:
                 - Ishara

            networks: // Define networks for connecting containers
                Ishara:

            view containers: docker ps
            create container : docker compose up dev-db -d
            check container log : docker logs <container ID>

    Prisma: 
        install prisma : npm install prisma --save-dev
        install prisma client: npm install @prisma/client //prisma Client can expose CRUD operations
        initialize : npx prisma init //this will make a prisma directory with prisma file and also .env file
        generate SQL migration files and run them against the database : npx prisma migrate dev --name init
        create type script types for schema : npx prisma generate (must run this after every changes made to schema)
        prisma studio visual editor for the data in your database: npx prisma studio
